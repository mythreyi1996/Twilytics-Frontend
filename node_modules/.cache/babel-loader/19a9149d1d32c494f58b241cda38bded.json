{"ast":null,"code":"var _jsxFileName = \"D:\\\\UB\\\\Projects\\\\IR\\\\Project4\\\\twilytics\\\\twilytics\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Form from \"./Form\";\nimport Contacts from \"./components/contacts\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchKey: \"\",\n      fields: {},\n      contacts: []\n    };\n\n    this.onChange = updatedValue => {\n      this.setState({\n        searchKey: updatedValue\n      });\n    };\n\n    this.onSearch = search => {\n      fetch(\"http://localhost:8080/list?name=\".concat(search)) //.then(res => res.json())\n      .then(data => {\n        this.setState({\n          contacts: data\n        });\n      }).catch(console.log); //this.setState({\n      //    searchKey: \"\"\n      //})\n    };\n  }\n\n  //http://jsonplaceholder.typicode.com/users  \n  //http://localhost:8080/list?name=us%20elections\n  //http://localhost:8080/list?name=Elections\n  //http://localhost:8080/list?name=Donald\n  componentDidMount() {\n    fetch('http://localhost:8080/list?name=Donald').then(res => res.json()).then(data => {\n      this.setState({\n        contacts: data\n      });\n    }).catch(console.log);\n  }\n\n  render() {\n    const searchKey = this.state.searchKey;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onChange: this.onChange,\n      onSearch: this.onSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Contacts, {\n      contacts: this.state.contacts,\n      searchKey: searchKey,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/UB/Projects/IR/Project4/twilytics/twilytics/src/App.js"],"names":["React","Component","Form","Contacts","App","state","searchKey","fields","contacts","onChange","updatedValue","setState","onSearch","search","fetch","then","data","catch","console","log","componentDidMount","res","json","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,WAAP;;AAGA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,SAAS,EAAE,EADL;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,KADkB;;AAAA,SAsB1BC,QAtB0B,GAsBfC,YAAY,IAAI;AACzB,WAAKC,QAAL,CAAc;AACVL,QAAAA,SAAS,EAAEI;AADD,OAAd;AAGD,KA1ByB;;AAAA,SA4B1BE,QA5B0B,GA4BdC,MAAD,IAAY;AACrBC,MAAAA,KAAK,2CAAoCD,MAApC,EAAL,CACA;AADA,OAECE,IAFD,CAEOC,IAAD,IAAU;AACd,aAAKL,QAAL,CAAc;AAAEH,UAAAA,QAAQ,EAAEQ;AAAZ,SAAd;AACD,OAJD,EAKCC,KALD,CAKOC,OAAO,CAACC,GALf,EADqB,CAOnB;AACA;AACA;AACH,KAtCyB;AAAA;;AAQ5B;AACA;AACA;AACA;AAEEC,EAAAA,iBAAiB,GAAG;AAClBN,IAAAA,KAAK,CAAC,wCAAD,CAAL,CACCC,IADD,CACMM,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECP,IAFD,CAEOC,IAAD,IAAU;AACd,WAAKL,QAAL,CAAc;AAAEH,QAAAA,QAAQ,EAAEQ;AAAZ,OAAd;AACD,KAJD,EAKCC,KALD,CAKOC,OAAO,CAACC,GALf;AAMD;;AAoBDI,EAAAA,MAAM,GAAG;AAAA,UACCjB,SADD,GACc,KAAKD,KADnB,CACCC,SADD;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKG,QAArB;AAA+B,MAAA,QAAQ,EAAE,KAAKG,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWG,QAA/B;AAAyC,MAAA,SAAS,EAAEF,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAhDyB;;AAmD5B,eAAeF,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Form from \"./Form\";\nimport Contacts from \"./components/contacts\";\nimport \"./App.css\";\n\n\nclass App extends Component {\n  state = {\n    searchKey: \"\",\n    fields: {},\n    contacts :[\n    ]\n  };\n\n//http://jsonplaceholder.typicode.com/users  \n//http://localhost:8080/list?name=us%20elections\n//http://localhost:8080/list?name=Elections\n//http://localhost:8080/list?name=Donald\n\n  componentDidMount() {\n    fetch('http://localhost:8080/list?name=Donald')\n    .then(res => res.json())\n    .then((data) => {\n      this.setState({ contacts: data })\n    })\n    .catch(console.log)\n  }\n\n  onChange = updatedValue => {\n    this.setState({\n        searchKey: updatedValue\n    });\n  };\n\n  onSearch = (search) => {\n    fetch(`http://localhost:8080/list?name=${search}`)\n    //.then(res => res.json())\n    .then((data) => {\n      this.setState({ contacts: data })\n    })\n    .catch(console.log)\n      //this.setState({\n      //    searchKey: \"\"\n      //})\n  };\n\n  render() {\n    const  {searchKey} = this.state;\n    return (\n      <div className=\"App\">\n        <Form onChange={this.onChange} onSearch={this.onSearch} />\n        <Contacts contacts={this.state.contacts} searchKey={searchKey}/>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}