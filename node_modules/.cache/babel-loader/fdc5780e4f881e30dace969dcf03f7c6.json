{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17165\\\\Documents\\\\Sem1\\\\IR\\\\twilytics_frontend\\\\src\\\\components\\\\Chart.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Bar, Line, Pie } from 'react-chartjs-2';\nimport App from '../App'; //import Button from React;\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {},\n      processed_chartData: {}\n    };\n\n    this.Processing = () => {\n      //Languages : en,fr,hi,ru\n      var dict = {\n        \"en\": 0,\n        \"fr\": 0,\n        \"hi\": 0,\n        \"ru\": 0,\n        \"pl\": 0\n      };\n\n      for (var i = 0; i < this.props.chartData.length; i++) {\n        var obj = this.props.chartData[i];\n\n        if (obj.lang in dict) {\n          dict[obj.lang] = dict[obj.lang] + 1;\n        }\n      }\n\n      var keys = [];\n      var values = [];\n\n      for (var key in dict) {\n        keys.push(key);\n        values.push(dict[key]);\n      }\n\n      this.setState({\n        chartData: {\n          labels: keys,\n          datasets: [{\n            label: 'Language',\n            data: values,\n            backgroundColor: ['rgba(255,99,130,0.6)', 'rgba(200,99,130,0.6)', 'rgba(195,99,130,0.6)', 'rgba(160,99,132,0.6)', 'rgba(150,99,132,0.6)']\n          }]\n        }\n      }); //alert(keys)\n      //alert(values);\n      //alert(language_data[values]);\n      //console.log(language_data)\n      //this.setState({processed_chartData : chartData});\n    };\n\n    this.onSubmit = async () => {\n      await this.Processing();\n    };\n\n    this.state = {\n      chartData: {}\n    };\n  }\n\n  componentDidMount() {\n    this.setState({});\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"buttonClass\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Analyse\"), React.createElement(Bar, {\n      data: this.state.chartData,\n      width: 10,\n      height: 10,\n      options: {\n        title: {\n          display: this.props.displayTitle,\n          text: 'Language',\n          fontSize: 20\n        },\n        lengend: {\n          display: this.props.displayLegend,\n          positon: this.props.lengendPosition\n        },\n        animationEnabled: true,\n        theme: \"dark2\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }));\n  }\n\n}\n\nChart.defaultProps = {\n  displayTitle: true,\n  displayLegend: true,\n  lengendPosition: 'right'\n};\nReactDOM.render(React.createElement(Chart, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 119\n  },\n  __self: this\n}), document.getElementById(\"root\"));\nexport default Chart;","map":{"version":3,"sources":["C:/Users/17165/Documents/Sem1/IR/twilytics_frontend/src/components/Chart.js"],"names":["React","Component","ReactDOM","Bar","Line","Pie","App","Chart","constructor","props","state","chartData","processed_chartData","Processing","dict","i","length","obj","lang","keys","values","key","push","setState","labels","datasets","label","data","backgroundColor","onSubmit","componentDidMount","render","title","display","displayTitle","text","fontSize","lengend","displayLegend","positon","lengendPosition","animationEnabled","theme","defaultProps","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Bar, Line, Pie} from 'react-chartjs-2';\r\nimport App from '../App';\r\n//import Button from React;\r\n\r\nclass Chart extends React.Component {\r\n    state = {\r\n      chartData: {},\r\n      processed_chartData: {}\r\n    };\r\n\r\n    static defaultProps = {\r\n        displayTitle:true,\r\n        displayLegend:true,\r\n        lengendPosition:'right'\r\n    }\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n       chartData :{}\r\n                        }\r\n        }\r\n\r\ncomponentDidMount() { \r\n   this.setState({})\r\n  \r\n}\r\n\r\n    Processing =  () => {\r\n        //Languages : en,fr,hi,ru\r\n    \r\n        var dict = {\r\n          \"en\": 0,\r\n          \"fr\": 0,\r\n          \"hi\": 0,\r\n          \"ru\": 0,\r\n          \"pl\": 0\r\n        };\r\n    \r\n        for(var i = 0; i < this.props.chartData.length; i++) {\r\n          var obj = this.props.chartData[i];\r\n          if (obj.lang in dict){\r\n          dict[obj.lang] = dict[obj.lang] + 1;\r\n          }\r\n    }\r\n    var keys = []\r\n    var values = []\r\n    for(var key in dict)  { \r\n        keys.push( key );\r\n        values.push(dict[key]);\r\n    }\r\n\r\n    this.setState({\r\n        chartData : {\r\n        labels : keys,\r\n        datasets:[\r\n            {\r\n                label : 'Language',\r\n                data: values,\r\n                backgroundColor:[\r\n                'rgba(255,99,130,0.6)',\r\n                'rgba(200,99,130,0.6)',\r\n                'rgba(195,99,130,0.6)',\r\n                'rgba(160,99,132,0.6)',\r\n                'rgba(150,99,132,0.6)'\r\n            ]\r\n            }\r\n        ]\r\n    }\r\n\r\n})\r\n    //alert(keys)\r\n    //alert(values);\r\n    //alert(language_data[values]);\r\n    //console.log(language_data)\r\n    //this.setState({processed_chartData : chartData});\r\n    }\r\n    \r\n\r\n    onSubmit = async () => {\r\n\r\n      await this.Processing();\r\n\r\n      \r\n         \r\n      };\r\n\r\n    render(){\r\n        \r\n                return (\r\n            \r\n            <div className=\"chart\">\r\n            <button className=\"buttonClass\" onClick={ this.onSubmit}>Analyse</button>\r\n            <Bar\r\n                      data={this.state.chartData}\r\n                      width={10}\r\n                      height={10}\r\n                      options={{\r\n                          title:{\r\n                              display:this.props.displayTitle,\r\n                              text:'Language',\r\n                              fontSize:20\r\n                          },\r\n                      lengend:{\r\n                          display:this.props.displayLegend,\r\n                          positon:this.props.lengendPosition\r\n                      },\r\n                      animationEnabled : true,\r\n                      theme: \"dark2\"\r\n                      }}\r\n                      />\r\n            </div>\r\n         )\r\n    }\r\n}\r\n\r\nReactDOM.render(<Chart />, document.getElementById(\"root\"));\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}