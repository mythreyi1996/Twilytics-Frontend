{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17165\\\\Documents\\\\Sem1\\\\IR\\\\twilytics_frontend\\\\src\\\\components\\\\News.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Bar, Line, Pie, Doughnut } from 'react-chartjs-2';\nimport App from '../App';\nimport \"./Chart.css\";\nimport { GoogleMap, InfoWindow, Marker, withScriptjs, withGoogleMap } from \"react-google-maps\";\n\nclass Chart extends React.Component {\n  Map() {\n    return React.createElement(GoogleMap, {\n      defaultZoom: 2,\n      defaultCenter: {\n        lat: 32.7502,\n        lng: 114.7655\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {},\n      location_chartData: {},\n      date_charData: {},\n      sentiment_chartData: {},\n      WrappedMap: {}\n    };\n\n    this.Processing = () => {\n      var lang_dict = {};\n      var loc_dict = {};\n      var date_dict = {};\n\n      for (var i = 0; i < this.props.chartData.length; i++) {\n        var obj = this.props.chartData[i];\n\n        if (obj.lang in lang_dict) {\n          lang_dict[obj.lang] = lang_dict[obj.lang] + 1;\n        } else {\n          lang_dict[obj.lang] = 1;\n        }\n\n        if (obj[\"state\"] in loc_dict) {\n          loc_dict[obj[\"state\"]] = loc_dict[obj[\"state\"]] + 1;\n        } else {\n          loc_dict[obj[\"state\"]] = 1;\n        }\n\n        if (obj.sentiment in sentiment_dict) {\n          sentiment_dict[obj.sentiment] = sentiment_dict[obj.sentiment] + 1;\n        }\n      }\n    };\n\n    this.state = {\n      chartData: {}\n    };\n  }\n\n  componentDidMount() {\n    this.setState({});\n    this.setState({\n      WrappedMap: withScriptjs(withGoogleMap(Map))\n    });\n  }\n\n  render() {\n    //this.Processing();\n    //const data =[{\"name\":\"test1\"},{\"name\":\"test2\"}];\n    const listItems = this.Processing(); //data.map((d) => <li key={d.name}>{d.name}</li>);\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, listItems);\n  }\n\n}\n\nChart.defaultProps = {\n  displayTitle: true,\n  displayLegend: true,\n  lengendPosition: 'right'\n};\nexport default News;","map":{"version":3,"sources":["C:/Users/17165/Documents/Sem1/IR/twilytics_frontend/src/components/News.js"],"names":["React","Component","ReactDOM","Bar","Line","Pie","Doughnut","App","GoogleMap","InfoWindow","Marker","withScriptjs","withGoogleMap","Chart","Map","lat","lng","constructor","props","state","chartData","location_chartData","date_charData","sentiment_chartData","WrappedMap","Processing","lang_dict","loc_dict","date_dict","i","length","obj","lang","sentiment","sentiment_dict","componentDidMount","setState","render","listItems","defaultProps","displayTitle","displayLegend","lengendPosition","News"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Bar, Line, Pie, Doughnut} from 'react-chartjs-2';\r\nimport App from '../App';\r\nimport \"./Chart.css\";\r\nimport {GoogleMap, InfoWindow, Marker, withScriptjs, withGoogleMap} from \"react-google-maps\"\r\n\r\n\r\n\r\nclass Chart extends React.Component {\r\n    \r\n    state = {\r\n      chartData: {},\r\n      location_chartData: {},\r\n      date_charData: {},\r\n      sentiment_chartData : {},\r\n      WrappedMap: {}\r\n    };\r\n\r\n    Map() {\r\n        return( \r\n        <GoogleMap \r\n          defaultZoom = {2}\r\n          defaultCenter={{lat:32.7502, lng:114.7655}} \r\n        >\r\n        </GoogleMap>\r\n        );\r\n      }\r\n\r\n    static defaultProps = {\r\n        displayTitle:true,\r\n        displayLegend:true,\r\n        lengendPosition:'right'\r\n    }\r\n\r\n    constructor(props){\r\n\r\n        \r\n        super(props);\r\n        \r\n        this.state = {\r\n       chartData :{}\r\n                    }\r\n    }\r\n\r\n    componentDidMount() { \r\n        this.setState({})\r\n        this.setState({ WrappedMap : withScriptjs(withGoogleMap(Map))});\r\n    }\r\n\r\n    Processing =  () => {\r\n\r\n        \r\n        var lang_dict = {};\r\n\r\n        var loc_dict = {};\r\n\r\n\r\n        var date_dict = {};\r\n    \r\n        for(var i = 0; i < this.props.chartData.length; i++) {\r\n            var obj = this.props.chartData[i];\r\n\r\n            if (obj.lang in lang_dict){\r\n                lang_dict[obj.lang] = lang_dict[obj.lang] + 1;\r\n            }\r\n            else {\r\n                lang_dict[obj.lang] = 1;\r\n            }\r\n\r\n            if (obj[\"state\"] in loc_dict) {\r\n                loc_dict[obj[\"state\"]] = loc_dict[obj[\"state\"]] + 1;\r\n                }\r\n            else {\r\n                    loc_dict[obj[\"state\"]] = 1;\r\n                }\r\n            \r\n            if (obj.sentiment in sentiment_dict) {\r\n             sentiment_dict[obj.sentiment] = sentiment_dict[obj.sentiment] + 1;\r\n            }\r\n\r\n\r\n        }   \r\n    }\r\n    \r\n    render() {\r\n      //this.Processing();\r\n      //const data =[{\"name\":\"test1\"},{\"name\":\"test2\"}];\r\n      const listItems = this.Processing(); //data.map((d) => <li key={d.name}>{d.name}</li>);\r\n  \r\n      return (\r\n        <div>\r\n        {listItems }\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default News;"]},"metadata":{},"sourceType":"module"}