{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17165\\\\Documents\\\\Sem1\\\\IR\\\\twilytics_frontend\\\\src\\\\components\\\\Chart.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Bar, Line, Pie, Doughnut } from 'react-chartjs-2';\nimport App from '../App';\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {},\n      location_chartData: {},\n      date_charData: {},\n      sentiment_chartData: {}\n    };\n\n    this.Processing = () => {\n      var lang_dict = {\n        \"en\": 0,\n        \"fr\": 0,\n        \"hi\": 0,\n        \"ru\": 0,\n        \"pl\": 0\n      };\n      var loc_dict = {\n        \"California\": 4,\n        \"Boston\": 3,\n        \"Washington DC\": 1,\n        \"New Delhi\": 6\n      };\n      var sentiment_dict = {\n        \"Positive\": 0,\n        \"Negative\": 0,\n        \"Neutral\": 0\n      };\n      var date_dict = {};\n\n      for (var i = 0; i < this.props.chartData.length; i++) {\n        var obj = this.props.chartData[i];\n\n        if (obj.lang in lang_dict) {\n          lang_dict[obj.lang] = lang_dict[obj.lang] + 1;\n        }\n\n        if (obj[\"user.location\"] in loc_dict) {\n          loc_dict[obj[\"user.location\"]] = loc_dict[obj[\"user.location\"]] + 1;\n        }\n\n        if (obj[\"sentiment\"] in sentiment_dict) {\n          sentiment_dict[obj[\"sentiment\"]] = sentiment_dict[obj[\"sentiment\"]] + 1;\n        }\n\n        var date = String(obj[\"created_at\"]).split(\" \");\n        ;\n        var monthDict = {\n          'Jan': 1,\n          'Feb': 2,\n          'Mar': 3,\n          'Apr': 4,\n          'May': 5,\n          'Jun': 6,\n          'Jul': 7,\n          'Aug': 8,\n          'Sep': 9,\n          'Oct': 10,\n          'Nov': 11,\n          'Dec': 12\n        };\n        var temp = date[5] + \"-\" + monthDict[String(date[1])] + \"-\" + date[2];\n        date = new Date(temp);\n\n        if (date in date_dict) {\n          date_dict[date] = date_dict[date] + 1;\n        } else {\n          date_dict[date] = 1;\n        }\n      }\n\n      var lang_keys = [];\n      var lang_values = [];\n      var loc_keys = [];\n      var loc_values = [];\n      var date_keys = [];\n      var date_values = [];\n      var sentiment_keys = [];\n      var sentiment_values = [];\n\n      for (var key in lang_dict) {\n        lang_keys.push(key);\n        lang_values.push(lang_dict[key]);\n      }\n\n      for (var key in loc_dict) {\n        loc_keys.push(key);\n        loc_values.push(loc_dict[key]);\n      }\n\n      for (var key in date_dict) {\n        date_keys.push(key);\n        date_values.push(date_dict[key]);\n      }\n\n      for (var key in date_dict) {\n        sentiment_keys.push(key);\n        sentiment_values.push(sentiment_dict[key]);\n      }\n\n      this.setState({\n        chartData: {\n          labels: lang_keys,\n          datasets: [{\n            label: \"Language\",\n            data: lang_values,\n            backgroundColor: [\"#3e95cd\", \"#8e5ea2\", \"#3cba9f\", \"#e8c3b9\", \"#c45850\", \"FCCE56\"]\n          }],\n          title: {\n            display: this.props.displayTitle,\n            text: 'Languages',\n            fontSize: 20\n          }\n        }\n      });\n      this.setState({\n        location_chartData: {\n          labels: loc_keys,\n          datasets: [{\n            label: 'Location',\n            data: loc_values,\n            backgroundColor: ['#a8e0ff', '#8ee3f5', '#70cad1', '#3e517a', '#b08ea2', '#BBB6DF']\n          }],\n          title: {\n            display: this.props.displayTitle,\n            text: 'Location',\n            fontSize: 20\n          }\n        }\n      });\n      this.setState({\n        date_chartData: {\n          labels: date_keys,\n          datasets: [{\n            label: 'Time series',\n            data: date_values,\n            borderColor: \"#8e5ea2\",\n            fill: false,\n            backgroundColor: ['#a8e0ff']\n          }],\n          title: {\n            display: this.props.displayTitle,\n            text: 'Time Series',\n            fontSize: 20\n          }\n        }\n      });\n      this.setState({\n        location_chartData: {\n          labels: sentiment_keys,\n          datasets: [{\n            label: 'Sentiment Analysis',\n            data: sentiment_values,\n            backgroundColor: ['#a8e0ff', '#8ee3f5', '#70cad1', '#3e517a', '#b08ea2', '#BBB6DF']\n          }],\n          title: {\n            display: this.props.displayTitle,\n            text: 'Sentiment',\n            fontSize: 20\n          }\n        }\n      });\n    };\n\n    this.onSubmit = async () => {\n      await this.Processing();\n    };\n\n    this.state = {\n      chartData: {}\n    };\n  }\n\n  componentDidMount() {\n    this.setState({});\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"buttonClass\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Analyse\"), React.createElement(Doughnut, {\n      data: this.state.chartData,\n      width: 20,\n      height: 10,\n      position: \"left\",\n      options: {\n        lengend: {\n          display: this.props.displayLegend,\n          positon: this.props.lengendPosition\n        },\n        animationEnabled: true,\n        theme: \"dark2\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), React.createElement(Pie, {\n      data: this.state.location_chartData,\n      width: 20,\n      height: 10,\n      position: \"left\",\n      options: {\n        lengend: {\n          display: this.props.displayLegend,\n          positon: this.props.lengendPosition\n        },\n        animationEnabled: true,\n        theme: \"dark1\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(Line, {\n      data: this.state.date_chartData,\n      width: 5,\n      height: 5,\n      position: \"left\",\n      options: {\n        fill: false,\n        lengend: {\n          display: this.props.displayLegend,\n          positon: this.props.lengendPosition\n        },\n        animationEnabled: true,\n        theme: \"light2\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), React.createElement(Pie, {\n      data: this.state.sentiment_chartData,\n      width: 20,\n      height: 10,\n      position: \"left\",\n      options: {\n        lengend: {\n          display: this.props.displayLegend,\n          positon: this.props.lengendPosition\n        },\n        animationEnabled: true,\n        theme: \"dark2\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }));\n  }\n\n}\n\nChart.defaultProps = {\n  displayTitle: true,\n  displayLegend: true,\n  lengendPosition: 'right'\n};\nReactDOM.render(React.createElement(Chart, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 260\n  },\n  __self: this\n}), document.getElementById(\"root\"));\nexport default Chart;","map":{"version":3,"sources":["C:/Users/17165/Documents/Sem1/IR/twilytics_frontend/src/components/Chart.js"],"names":["React","Component","ReactDOM","Bar","Line","Pie","Doughnut","App","Chart","constructor","props","state","chartData","location_chartData","date_charData","sentiment_chartData","Processing","lang_dict","loc_dict","sentiment_dict","date_dict","i","length","obj","lang","date","String","split","monthDict","temp","Date","lang_keys","lang_values","loc_keys","loc_values","date_keys","date_values","sentiment_keys","sentiment_values","key","push","setState","labels","datasets","label","data","backgroundColor","title","display","displayTitle","text","fontSize","date_chartData","borderColor","fill","onSubmit","componentDidMount","render","lengend","displayLegend","positon","lengendPosition","animationEnabled","theme","defaultProps","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Bar, Line, Pie, Doughnut} from 'react-chartjs-2';\r\nimport App from '../App';\r\n\r\nclass Chart extends React.Component {\r\n    state = {\r\n      chartData: {},\r\n      location_chartData: {},\r\n      date_charData: {},\r\n      sentiment_chartData : {}\r\n    };\r\n\r\n    static defaultProps = {\r\n        displayTitle:true,\r\n        displayLegend:true,\r\n        lengendPosition:'right'\r\n    }\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n       chartData :{}\r\n                    }\r\n    }\r\n\r\n    componentDidMount() { \r\n        this.setState({})\r\n    }\r\n\r\n    Processing =  () => {\r\n    \r\n        var lang_dict = {\r\n          \"en\": 0,\r\n          \"fr\": 0,\r\n          \"hi\": 0,\r\n          \"ru\": 0,\r\n          \"pl\": 0\r\n        };\r\n\r\n        var loc_dict = {\r\n            \"California\": 4,\r\n            \"Boston\": 3,\r\n            \"Washington DC\": 1,\r\n            \"New Delhi\": 6\r\n        };\r\n\r\n        var sentiment_dict = {\r\n            \"Positive\": 0,\r\n            \"Negative\": 0,\r\n            \"Neutral\": 0,\r\n        };\r\n\r\n        var date_dict = {};\r\n    \r\n        for(var i = 0; i < this.props.chartData.length; i++) {\r\n          var obj = this.props.chartData[i];\r\n            if (obj.lang in lang_dict){\r\n                lang_dict[obj.lang] = lang_dict[obj.lang] + 1;\r\n            }\r\n\r\n            if (obj[\"user.location\"] in loc_dict) {\r\n                loc_dict[obj[\"user.location\"]] = loc_dict[obj[\"user.location\"]] + 1;\r\n            }\r\n\r\n            if (obj[\"sentiment\"] in sentiment_dict) {\r\n             sentiment_dict[obj[\"sentiment\"]] = sentiment_dict[obj[\"sentiment\"]] + 1;\r\n            }\r\n\r\n            var date = String(obj[\"created_at\"]).split(\" \");;\r\n            var monthDict={'Jan':1, 'Feb':2, 'Mar':3, 'Apr':4, 'May':5, 'Jun':6, 'Jul':7, 'Aug':8, 'Sep':9, 'Oct':10, 'Nov':11, 'Dec':12};\r\n            var temp = date[5] + \"-\" + monthDict[String(date[1])] + \"-\" + date[2];\r\n            date = new Date(temp);\r\n\r\n            if (date in  date_dict) {\r\n            date_dict[date] = date_dict[date] + 1;\r\n            }\r\n            else {\r\n            date_dict[date] = 1;\r\n            }\r\n        }   \r\n\r\n\r\n        var lang_keys = []\r\n        var lang_values = []\r\n        var loc_keys = []\r\n        var loc_values = []\r\n        var date_keys = []\r\n        var date_values = []\r\n        var sentiment_keys = []\r\n        var sentiment_values = []\r\n        for(var key in lang_dict)  { \r\n            lang_keys.push( key );\r\n            lang_values.push(lang_dict[key]);\r\n        }\r\n\r\n        for(var key in loc_dict)  { \r\n            loc_keys.push( key );\r\n            loc_values.push(loc_dict[key]);\r\n        }\r\n\r\n        for(var key in date_dict)  { \r\n            date_keys.push( key );\r\n            date_values.push(date_dict[key]);\r\n        }\r\n\r\n        for(var key in date_dict)  { \r\n            sentiment_keys.push( key );\r\n            sentiment_values.push(sentiment_dict[key]);\r\n        }\r\n\r\n\r\n    this.setState({\r\n        chartData : {\r\n        labels : lang_keys,\r\n        datasets:[\r\n            {\r\n                label : \"Language\",\r\n                data: lang_values,\r\n                backgroundColor:  [\"#3e95cd\", \"#8e5ea2\",\"#3cba9f\",\"#e8c3b9\",\"#c45850\", \"FCCE56\"],\r\n            }\r\n        ],\r\n        title:{\r\n            display:this.props.displayTitle,\r\n            text:'Languages',\r\n            fontSize:20\r\n        }\r\n    }\r\n    })\r\n\r\n    this.setState({\r\n        location_chartData : {\r\n        labels : loc_keys,\r\n        datasets:[\r\n        {\r\n            label : 'Location',\r\n            data: loc_values,\r\n            backgroundColor: ['#a8e0ff', '#8ee3f5', '#70cad1', '#3e517a', '#b08ea2', '#BBB6DF']\r\n        }\r\n        ],\r\n        title:{\r\n            display:this.props.displayTitle,\r\n            text:'Location',\r\n            fontSize:20\r\n        },\r\n        }\r\n    })\r\n\r\n    this.setState({\r\n        date_chartData : {\r\n        labels : date_keys,\r\n        datasets:[{\r\n            label : 'Time series',\r\n            data: date_values,\r\n            borderColor: \"#8e5ea2\",\r\n            fill: false,\r\n            backgroundColor: ['#a8e0ff'],\r\n        }],\r\n        title:{\r\n            display:this.props.displayTitle,\r\n            text:'Time Series',\r\n            fontSize:20\r\n        },\r\n        }\r\n    })\r\n\r\n    this.setState({\r\n        location_chartData : {\r\n        labels : sentiment_keys,\r\n        datasets:[\r\n        {\r\n            label : 'Sentiment Analysis',\r\n            data: sentiment_values,\r\n            backgroundColor: ['#a8e0ff', '#8ee3f5', '#70cad1', '#3e517a', '#b08ea2', '#BBB6DF']\r\n        }\r\n        ],\r\n        title:{\r\n            display:this.props.displayTitle,\r\n            text:'Sentiment',\r\n            fontSize:20\r\n        },\r\n        }\r\n    })\r\n\r\n    }\r\n    \r\n    onSubmit = async () => {\r\n\r\n      await this.Processing();\r\n         \r\n    };\r\n    \r\n    render(){\r\n            return (\r\n            \r\n            <div className=\"chart\">\r\n                <button className=\"buttonClass\" onClick={ this.onSubmit}>Analyse</button> \r\n            <Doughnut\r\n                    data={this.state.chartData}\r\n                    width= {20}\r\n                    height={10}\r\n                    position=\"left\"\r\n                    options={{\r\n                    lengend:{\r\n                        display:this.props.displayLegend,\r\n                        positon:this.props.lengendPosition\r\n                    },\r\n                    animationEnabled : true,\r\n                    theme: \"dark2\"\r\n                    }}\r\n            />\r\n            <Pie\r\n                    data={this.state.location_chartData}\r\n                    width={20}\r\n                    height={10}\r\n                    position=\"left\"\r\n                    options={{\r\n                        lengend:{\r\n                            display:this.props.displayLegend,\r\n                            positon:this.props.lengendPosition\r\n                        },\r\n                    animationEnabled : true,\r\n                    theme: \"dark1\"\r\n                  }}\r\n            />\r\n            <Line\r\n                    data={this.state.date_chartData}\r\n                    width= {5}\r\n                    height={5}\r\n                    position=\"left\"\r\n                    options={{\r\n                        fill:false,\r\n                        lengend:{\r\n                            display:this.props.displayLegend,\r\n                            positon:this.props.lengendPosition\r\n                        },\r\n                    animationEnabled : true,\r\n                    theme: \"light2\"\r\n                    }}\r\n            />\r\n            <Pie\r\n                    data={this.state.sentiment_chartData}\r\n                    width= {20}\r\n                    height={10}\r\n                    position=\"left\"\r\n                    options={{\r\n                        lengend:{\r\n                        display:this.props.displayLegend,\r\n                        positon:this.props.lengendPosition\r\n                        },\r\n                        animationEnabled : true,\r\n                        theme: \"dark2\"\r\n                    }}\r\n                    />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render(<Chart />, document.getElementById(\"root\"));\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}