{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17165\\\\Documents\\\\Sem1\\\\IR\\\\twilytics_frontend\\\\src\\\\components\\\\News.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Bar, Line, Pie, Doughnut } from 'react-chartjs-2';\nimport App from '../App';\nimport \"./Chart.css\";\nimport { GoogleMap, InfoWindow, Marker, withScriptjs, withGoogleMap } from \"react-google-maps\";\n\nclass News extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {},\n      location_chartData: {},\n      date_charData: {},\n      sentiment_chartData: {},\n      WrappedMap: {},\n      url: [],\n      title: [],\n      t: [{\n        news: \"abcd\",\n        url: \"hhtps\"\n      }],\n      people: [{\n        news: \"abcd\",\n        url: \"hhtps\"\n      }]\n    };\n\n    this.Processing = () => {\n      var title = [];\n      var url = [];\n      var people = [];\n      var news = [];\n      var urls = [];\n      alert(this.props.chartData);\n\n      for (var i = 0; i < 5; i++) {\n        var obj = this.props.chartData[i];\n        news = obj.news;\n        urls = obj.news_url;\n\n        if (news != undefined) {\n          for (var j = 0; j < 2; j++) {\n            if (news[j] != null) {\n              people.push({\n                news: news[j],\n                url: urls[j]\n              });\n            }\n          }\n        }\n      }\n\n      this.setState({\n        people: people\n      });\n      this.setState({\n        t: people\n      });\n    };\n\n    this.onSubmit = async () => {\n      await this.Processing();\n    };\n\n    this.state = {\n      chartData: {}\n    };\n  }\n\n  componentDidMount() {\n    this.setState({});\n  }\n\n  render() {\n    const temp = this.state.WrappedMap;\n    return React.createElement(\"div\", {\n      className: \"news\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"buttonClass\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"News\"), this.state.people.map((person, index) => React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Hello, \", person.news, \" from \", person.url, \"!\")));\n  }\n\n}\n\nNews.defaultProps = {\n  displayTitle: true,\n  displayLegend: true,\n  lengendPosition: 'right'\n};\nReactDOM.render(React.createElement(News, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95\n  },\n  __self: this\n}), document.getElementById(\"root\"));\nexport default News;","map":{"version":3,"sources":["C:/Users/17165/Documents/Sem1/IR/twilytics_frontend/src/components/News.js"],"names":["React","Component","ReactDOM","Bar","Line","Pie","Doughnut","App","GoogleMap","InfoWindow","Marker","withScriptjs","withGoogleMap","News","constructor","props","state","chartData","location_chartData","date_charData","sentiment_chartData","WrappedMap","url","title","t","news","people","Processing","urls","alert","i","obj","news_url","undefined","j","push","setState","onSubmit","componentDidMount","render","temp","map","person","index","defaultProps","displayTitle","displayLegend","lengendPosition","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Bar, Line, Pie, Doughnut} from 'react-chartjs-2';\r\nimport App from '../App';\r\nimport \"./Chart.css\";\r\nimport {GoogleMap, InfoWindow, Marker, withScriptjs, withGoogleMap} from \"react-google-maps\"\r\n\r\nclass News extends React.Component {\r\n    \r\n    state = {\r\n      chartData: {},\r\n      location_chartData: {},\r\n      date_charData: {},\r\n      sentiment_chartData : {},\r\n      WrappedMap: {},\r\n      url: [],\r\n      title: [],\r\n      t :[{\r\n        news: \"abcd\",\r\n        url: \"hhtps\"\r\n    }],\r\n      people : [{\r\n        news: \"abcd\",\r\n        url: \"hhtps\"\r\n    }]\r\n    };\r\n\r\n    static defaultProps = {\r\n        displayTitle:true,\r\n        displayLegend:true,\r\n        lengendPosition:'right'\r\n    }\r\n\r\n    constructor(props){\r\n\r\n        \r\n        super(props);\r\n        \r\n        this.state = {\r\n       chartData :{}\r\n                    }\r\n    }\r\n\r\n    componentDidMount() { \r\n        this.setState({})\r\n    }\r\n\r\n    Processing =  () => {\r\n\r\n        var title = [];\r\n        var url = [];\r\n        var people = [];\r\n        var news = [];\r\n        var urls = []\r\n        alert(this.props.chartData)\r\n        for(var i = 0; i < 5; i++) {\r\n            var obj = this.props.chartData[i];\r\n             news = obj.news;\r\n             urls = obj.news_url;\r\n\r\n            if(news != undefined) {\r\n                for (var j =0 ; j<2; j++) {\r\n                    if(news[j] != null) {\r\n                        people.push({\r\n                            news: news[j],\r\n                            url: urls[j]\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.setState({\r\n            people : people})\r\n        this.setState({\r\n                t : people})\r\n        \r\n        }\r\n    onSubmit = async () => {\r\n      await this.Processing();\r\n    };\r\n    \r\n    render(){\r\n            const temp = this.state.WrappedMap\r\n            return (\r\n            <div className=\"news\">\r\n            <button className=\"buttonClass\" onClick={ this.onSubmit}>News</button>\r\n            {this.state.people.map((person, index) => (\r\n                <p>Hello, {person.news} from {person.url}!</p>\r\n            ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render(<News />, document.getElementById(\"root\"));\r\nexport default News;"]},"metadata":{},"sourceType":"module"}