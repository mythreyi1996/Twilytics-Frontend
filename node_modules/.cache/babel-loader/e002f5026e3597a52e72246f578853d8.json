{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17165\\\\Documents\\\\Sem1\\\\IR\\\\twilytics_frontend\\\\src\\\\components\\\\facets.js\";\nimport React from \"react\";\nimport \"./facets.css\";\nimport cloneDeep from \"lodash/cloneDeep\";\n\nclass Facets extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: {},\n      query: \"\",\n      facet: {\n        poiName: [],\n        lang: [],\n        hashtags: [],\n        mentions: [],\n        loc: []\n      },\n      query_1: []\n    };\n\n    this.onnameSubmit = (e, fieldValue, fieldName) => {\n      const facet = cloneDeep(this.state.facet);\n\n      if (fieldName && fieldValue && facet[fieldName].includes(fieldValue)) {\n        const index = facet[fieldName].indexOf(fieldValue);\n\n        if (index > -1) {\n          facet[fieldName].splice(index, 1);\n        }\n      } else {\n        facet[fieldName].push(fieldValue);\n      }\n\n      this.setState({\n        facet\n      });\n      this.props.onFilter(JSON.stringify(facet));\n    };\n\n    this.onReset = {};\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.facets !== prevState.name) {\n      console.log(nextProps.facets);\n      return {\n        name: nextProps.facets\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    const _this$state = this.state,\n          name = _this$state.name,\n          facet = _this$state.facet;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"facetCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"facetWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"User Name\"), name && name.userScreenName ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, name.userScreenName.map(poi_name => {\n      const checked = facet.poiName.includes(poi_name);\n      return React.createElement(\"div\", {\n        className: \"facetName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: checked,\n        onChange: e => this.onnameSubmit(e, poi_name, \"poiName\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, poi_name));\n    })) : null), React.createElement(\"div\", {\n      className: \"facetWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Language\"), name && name.lang ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, name.lang.map(poi_lang => {\n      const checked = facet.lang.includes(poi_lang);\n      return React.createElement(\"div\", {\n        className: \"facetName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: checked,\n        onChange: e => this.onnameSubmit(e, poi_lang, \"lang\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, poi_lang));\n    })) : null), React.createElement(\"div\", {\n      className: \"facetWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Hashtags\"), name && name.hashtags ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, name.hashtags.map(poi_hashtag => {\n      const checked = facet.hashtags.includes(poi_hashtag);\n      return React.createElement(\"div\", {\n        className: \"facetName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: checked,\n        onChange: e => this.onnameSubmit(e, poi_hashtag, \"hashtags\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, poi_hashtag));\n    })) : null), React.createElement(\"div\", {\n      className: \"facetWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Mentions\"), name && name.mentions ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, name.mentions.map(poi_mention => {\n      const checked = facet.mentions.includes(poi_mention);\n      return React.createElement(\"div\", {\n        className: \"facetName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: checked,\n        onChange: e => this.onnameSubmit(e, poi_mention, \"mentions\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, poi_mention));\n    })) : null), React.createElement(\"div\", {\n      className: \"facetWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Location\"), name && name.userLocation ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, name.userLocation.map(poi_location => {\n      const checked = facet.loc.includes(poi_location);\n      return React.createElement(\"div\", {\n        className: \"facetName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: checked,\n        onChange: e => this.onnameSubmit(e, poi_location, \"loc\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, poi_location));\n    })) : null), React.createElement(\"div\", {\n      className: \"facetWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"resetButtonClass\",\n      onClick: e => this.onReset(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"reset\"))));\n  }\n\n}\n\nexport default Facets;","map":{"version":3,"sources":["C:/Users/17165/Documents/Sem1/IR/twilytics_frontend/src/components/facets.js"],"names":["React","cloneDeep","Facets","Component","state","name","query","facet","poiName","lang","hashtags","mentions","loc","query_1","onnameSubmit","e","fieldValue","fieldName","includes","index","indexOf","splice","push","setState","props","onFilter","JSON","stringify","onReset","getDerivedStateFromProps","nextProps","prevState","facets","console","log","render","userScreenName","map","poi_name","checked","poi_lang","poi_hashtag","poi_mention","userLocation","poi_location"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./facets.css\";\r\nimport cloneDeep from \"lodash/cloneDeep\";\r\n\r\nclass Facets extends React.Component {\r\n    state = {\r\n        name: {},\r\n        query: \"\",\r\n        facet: {\r\n            poiName: [],\r\n            lang: [],\r\n            hashtags: [],\r\n            mentions: [],\r\n            loc: []\r\n        },\r\n        query_1: []\r\n    };\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        if (nextProps.facets !== prevState.name) {\r\n            console.log(nextProps.facets);\r\n            return { name: nextProps.facets };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    onnameSubmit = (e, fieldValue, fieldName) => {\r\n        const facet = cloneDeep(this.state.facet);\r\n\r\n        if (fieldName && fieldValue && facet[fieldName].includes(fieldValue)) {\r\n            const index = facet[fieldName].indexOf(fieldValue);\r\n            if (index > -1) {\r\n                facet[fieldName].splice(index, 1);\r\n            }\r\n        } else  {\r\n            facet[fieldName].push(fieldValue);\r\n        }\r\n\r\n        this.setState({\r\n            facet\r\n        });\r\n\r\n        this.props.onFilter(JSON.stringify(facet));\r\n    };\r\n\r\n    onReset ={\r\n        \r\n    }\r\n\r\n    render() {\r\n        const { name, facet } = this.state;\r\n        return (\r\n            <div>\r\n                <div className = \"facetCard\">\r\n                    <div className=\"facetWrapper\">\r\n                        <h5 className=\"header\">User Name</h5>\r\n                        {name && name.userScreenName ? (\r\n                            <React.Fragment>\r\n                                {name.userScreenName.map(poi_name => {\r\n                                    const checked = facet.poiName.includes(poi_name);\r\n                                    return (\r\n                                        <div className=\"facetName\"\r\n                                        >\r\n                                            <input\r\n                                                type=\"checkbox\"\r\n                                                checked={checked}\r\n                                                onChange={e => this.onnameSubmit(e, poi_name, \"poiName\")}\r\n                                            />\r\n                                            <span>{poi_name}</span>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </React.Fragment>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"facetWrapper\">\r\n                        <h5 className=\"header\">Language</h5>\r\n                        {name && name.lang ? (\r\n                            <React.Fragment>\r\n                                {name.lang.map(poi_lang => {\r\n                                    const checked = facet.lang.includes(poi_lang);\r\n                                    return (\r\n                                        <div className=\"facetName\">\r\n                                            <input\r\n                                                type=\"checkbox\"\r\n                                                checked={checked}\r\n                                                onChange={e => this.onnameSubmit(e, poi_lang, \"lang\")}\r\n                                            />\r\n                                            <span>{poi_lang}</span>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </React.Fragment>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"facetWrapper\">\r\n                        <h5 className=\"header\">Hashtags</h5>\r\n                        {name && name.hashtags ? (\r\n                            <React.Fragment>\r\n                                {name.hashtags.map(poi_hashtag => {\r\n                                    const checked = facet.hashtags.includes(poi_hashtag);\r\n                                    return (\r\n                                        <div className=\"facetName\">\r\n                                            <input\r\n                                                type=\"checkbox\"\r\n                                                checked={checked}\r\n                                                onChange={e => this.onnameSubmit(e, poi_hashtag, \"hashtags\")}\r\n                                            />\r\n                                            <span>{poi_hashtag}</span>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </React.Fragment>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"facetWrapper\">\r\n                        <h5 className=\"header\">Mentions</h5>\r\n                        {name && name.mentions ? (\r\n                            <React.Fragment>\r\n                                {name.mentions.map(poi_mention => {\r\n                                    const checked = facet.mentions.includes(poi_mention);\r\n                                    return (\r\n                                        <div className=\"facetName\">\r\n                                            <input\r\n                                                type=\"checkbox\"\r\n                                                checked={checked}\r\n                                                onChange={e => this.onnameSubmit(e, poi_mention, \"mentions\")}\r\n                                            />\r\n                                            <span>{poi_mention}</span>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </React.Fragment>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"facetWrapper\">\r\n                        <h5 className=\"header\">Location</h5>\r\n                        {name && name.userLocation ? (\r\n                            <React.Fragment>\r\n                                {name.userLocation.map(poi_location => {\r\n                                    const checked = facet.loc.includes(poi_location);\r\n                                    return (\r\n                                        <div className=\"facetName\">\r\n                                            <input\r\n                                                type=\"checkbox\"\r\n                                                checked={checked}\r\n                                                onChange={e => this.onnameSubmit(e, poi_location, \"loc\")}\r\n                                            />\r\n                                            <span>{poi_location}</span>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </React.Fragment>\r\n                        ) : null}\r\n                    </div>\r\n                    <div className=\"facetWrapper\">\r\n                        <button className=\"resetButtonClass\" onClick={e => this.onReset(e)}>reset</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Facets;\r\n"]},"metadata":{},"sourceType":"module"}