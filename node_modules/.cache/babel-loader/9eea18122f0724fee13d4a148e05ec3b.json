{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17165\\\\Documents\\\\Sem1\\\\IR\\\\twilytics_frontend\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Form from \"./Form\";\nimport Contacts from \"./components/contacts\";\nimport Filter from \"./components/filter\";\nimport Chart from \"./components/Chart\";\nimport Facets from \"./components/facets\";\nimport News from \"./components/News\";\nimport { BrowserRouter as Router, Link, NavLink, Redirect } from 'react-router-dom';\nimport Route from 'react-router-dom/Route';\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchKey: \"\",\n      fields: {},\n      contacts: [],\n      News: {},\n      Chart: {},\n      facets: {\n        \"poiName\": [],\n        \"lang\": [],\n        \"hashtags\": [],\n        \"mentions\": [],\n        \"userLocation\": [],\n        \"additionalProperties\": {}\n      },\n      facet_query: {\n        \"poiName\": [],\n        \"lang\": [],\n        \"hashtags\": [],\n        \"mentions\": [],\n        \"userLocation\": [],\n        \"additionalProperties\": {}\n      }\n    };\n\n    this.onChange = updatedValue => {\n      this.setState({\n        searchKey: updatedValue\n      });\n    };\n\n    this.componentDidMount = async () => {\n      console.log(this.state.facets);\n      await fetch('http://localhost:8080/fetch/fields?name=', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.facet_query)\n      }).then(res => res.json()).then(data => {\n        this.setState({\n          facets: data\n        });\n      }).catch(console.log);\n      console.log(this.state.facets);\n    };\n\n    this.onSearch = async search => {\n      await fetch(\"http://localhost:8080/query/search?name=\".concat(search)) //await fetch(`http://twilytics.us-east-2.elasticbeanstalk.com/query/search?name=${search}`)\n      .then(res => res.json()).then(data => {\n        this.setState({\n          contacts: data\n        });\n        this.setState({\n          analyse: true\n        });\n        console.log(this.state.contacts);\n        this.News.current.Processing();\n        this.Chart.current.Processing();\n      }).catch(console.log);\n      this.setState({\n        searchKey: search\n      });\n      this.onFacet(search);\n    };\n\n    this.onFacet = async query => {\n      await fetch(\"http://localhost:8080/fetch/fields?name=\".concat(query), {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.facet_query)\n      }) //await fetch(`http://twilytics.us-east-2.elasticbeanstalk.com/fetch/fields?name=${query}`)\n      .then(res => res.json()).then(data => {\n        this.setState({\n          facets: data\n        });\n        this.News.current.Processing();\n      }).catch(console.log);\n      console.log(\"onFacetcalled\" + query);\n    };\n\n    this.onFilter = async query => {\n      console.log(query);\n      await fetch(\"http://localhost:8080/query/facet?name=\".concat(this.state.searchKey), {\n        // await fetch(`http://twilytics.us-east-2.elasticbeanstalk.com/query/facet?name=${this.state.searchKey}`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: query\n      }).then(res => res.json()).then(data => {\n        this.setState({\n          contacts: data\n        });\n      }).catch(console.log);\n      console.log(\"onFiltercalled\"); /// Call onfacet after filter is changed\n\n      this.setState({\n        facet_query: query\n      });\n      console.log(this.state.facet_query);\n      console.log(this.state.searchKey); //this.onFacet(this.state.searchKey)\n    };\n\n    this.onDate = (startDate, endDate) => {\n      console.log(\"onDate called\");\n      fetch('http://localhost:8080/list?name=Donald').then(res => res.json()).then(data => {\n        this.setState({\n          contacts: data\n        });\n      }).catch(console.log);\n    };\n\n    this.News = React.createRef();\n    this.Chart = React.createRef();\n  }\n\n  render() {\n    const searchKey = this.state.searchKey;\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/\",\n      exact: true,\n      activeStyle: {\n        color: 'green'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Home\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/analyse\",\n      exact: true,\n      activeStyle: {\n        color: 'green'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Analyse\"))), React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      strict: true,\n      render: () => {\n        return React.createElement(\"div\", {\n          className: \"App_1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, React.createElement(Form, {\n          onChange: this.onChange,\n          onSearch: this.onSearch,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"App-components\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, React.createElement(Facets, {\n          facets: this.state.facets,\n          onFacet: this.onFacet,\n          onFilter: this.onFilter,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }), React.createElement(Contacts, {\n          contacts: this.state.contacts,\n          searchKey: searchKey,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }), React.createElement(News, {\n          ref: this.News,\n          newsData: this.state.contacts,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        })));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/analyse\",\n      exact: true,\n      strict: true,\n      render: () => {\n        return React.createElement(\"div\", {\n          className: \"App_1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, React.createElement(Chart, {\n          ref: this.Chart,\n          chartData: this.state.contacts,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/17165/Documents/Sem1/IR/twilytics_frontend/src/App.js"],"names":["React","Component","Form","Contacts","Filter","Chart","Facets","News","BrowserRouter","Router","Link","NavLink","Redirect","Route","App","constructor","props","state","searchKey","fields","contacts","facets","facet_query","onChange","updatedValue","setState","componentDidMount","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","data","catch","onSearch","search","analyse","current","Processing","onFacet","query","onFilter","onDate","startDate","endDate","createRef","render","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Form from \"./Form\";\r\nimport Contacts from \"./components/contacts\";\r\nimport Filter from \"./components/filter\";\r\nimport Chart from \"./components/Chart\";\r\nimport Facets from \"./components/facets\";\r\nimport News from \"./components/News\";\r\nimport {BrowserRouter as Router, Link, NavLink, Redirect} from 'react-router-dom';\r\nimport Route from 'react-router-dom/Route';\r\nimport \"./App.css\";\r\nimport \"./logo.svg\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.News = React.createRef();\r\n    this.Chart = React.createRef();\r\n  }\r\n\r\n\r\n  state = {\r\n    searchKey: \"\",\r\n    fields: {},\r\n    contacts :[],\r\n    News :{},\r\n    Chart:{},\r\n    facets:{\"poiName\":[],\r\n    \"lang\":[],\r\n    \"hashtags\":[],\r\n    \"mentions\":[],\r\n    \"userLocation\":[],\r\n    \"additionalProperties\":{}},\r\n    facet_query:{\"poiName\":[],\r\n    \"lang\":[],\r\n    \"hashtags\":[],\r\n    \"mentions\":[],\r\n    \"userLocation\":[],\r\n    \"additionalProperties\":{}}\r\n  };\r\n\r\n\r\n//http://localhost:8080/list?name=Donald\r\n\r\n  onChange = updatedValue => {\r\n    this.setState({\r\n        searchKey: updatedValue\r\n    });\r\n  };\r\n\r\n  //http://twilytics.us-east-2.elasticbeanstalk.com/list?name=donald \r\n\r\n   /*componentDidMount = async() => {\r\n     await fetch('http://localhost:8080/fetch/fields?name=')\r\n     //await fetch('http://twilytics.us-east-2.elasticbeanstalk.com/fetch/fields?name')\r\n    .then(res => res.json())\r\n     .then((data) => {\r\n       this.setState({ facets: data })\r\n     })\r\n     .catch(console.log)\r\n     console.log(this.state.facets)\r\n   }*/\r\n\r\n   componentDidMount = async() => {\r\n    console.log(this.state.facets)\r\n    await fetch('http://localhost:8080/fetch/fields?name=', {\r\n       method: 'POST',\r\n       headers: {\r\n       'Accept': 'application/json',\r\n       'Content-Type': 'application/json',\r\n       },\r\n       body: JSON.stringify(this.state.facet_query)\r\n     })\r\n   .then(res => res.json())\r\n    .then((data) => {\r\n      this.setState({ facets: data })\r\n    })\r\n    .catch(console.log)\r\n    console.log(this.state.facets)\r\n  }\r\n\r\n  onSearch = async(search) => {\r\n    await fetch(`http://localhost:8080/query/search?name=${search}`)\r\n    //await fetch(`http://twilytics.us-east-2.elasticbeanstalk.com/query/search?name=${search}`)\r\n    .then(res => res.json())\r\n    .then((data) => {\r\n      this.setState({ contacts: data })\r\n      this.setState({analyse:true})\r\n      console.log(this.state.contacts)\r\n      this.News.current.Processing();\r\n      this.Chart.current.Processing();\r\n    })\r\n    .catch(console.log)\r\n\r\n       this.setState({\r\n           searchKey: search\r\n       })\r\n    this.onFacet(search)  \r\n  };\r\n\r\n  /*onFacet = async(query) => {\r\n    await fetch(`http://localhost:8080/fetch/fields?name=${query}`)\r\n    //await fetch(`http://twilytics.us-east-2.elasticbeanstalk.com/fetch/fields?name=${query}`)\r\n    .then(res => res.json())\r\n    .then((data) => {\r\n     this.setState({ facets: data })\r\n    })\r\n    .catch(console.log)\r\n    console.log(\"onFacetcalled\" + query)\r\n  };*/\r\n\r\n  onFacet = async(query) => {\r\n    await fetch(`http://localhost:8080/fetch/fields?name=${query}`, \r\n    {\r\n      method: 'POST',\r\n      headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(this.state.facet_query)\r\n    }\r\n    )\r\n    //await fetch(`http://twilytics.us-east-2.elasticbeanstalk.com/fetch/fields?name=${query}`)\r\n    .then(res => res.json())\r\n    .then((data) => {\r\n     this.setState({ facets: data })\r\n     this.News.current.Processing();\r\n    })\r\n    .catch(console.log)\r\n    console.log(\"onFacetcalled\" + query)\r\n  };\r\n\r\n  onFilter = async(query) => {\r\n    console.log(query)\r\n    await fetch(`http://localhost:8080/query/facet?name=${this.state.searchKey}`, {\r\n     // await fetch(`http://twilytics.us-east-2.elasticbeanstalk.com/query/facet?name=${this.state.searchKey}`, {\r\n      method: 'POST',\r\n      headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n      },\r\n      body: query\r\n    }).then(res => res.json())\r\n    .then((data) => {\r\n      this.setState({ contacts: data })\r\n    })\r\n    .catch(console.log)\r\n    console.log(\"onFiltercalled\") \r\n    /// Call onfacet after filter is changed\r\n    this.setState({facet_query: query})\r\n    console.log(this.state.facet_query)\r\n    console.log(this.state.searchKey)\r\n    //this.onFacet(this.state.searchKey)\r\n  }\r\n\r\n  onDate = (startDate, endDate) => {\r\n    console.log(\"onDate called\")\r\n    fetch('http://localhost:8080/list?name=Donald')\r\n    .then(res => res.json())\r\n    .then((data) => {\r\n      this.setState({ contacts: data })\r\n    })\r\n    .catch(console.log)\r\n  }\r\n\r\n  render() {\r\n    const  {searchKey} = this.state;\r\n    return (\r\n      <Router>\r\n      <div className=\"App\">\r\n      <ul>\r\n        <li>\r\n        <NavLink to=\"/\" exact activeStyle = {\r\n          {color:'green'}\r\n        }>Home</NavLink>\r\n        </li>\r\n        <li>\r\n        <NavLink to=\"/analyse\"  exact activeStyle = {\r\n          {color:'green'}\r\n        }>Analyse</NavLink>\r\n        </li>\r\n      </ul>\r\n      <Route path=\"/\" exact strict render = {\r\n        () => {\r\n          return (\r\n          <div className = \"App_1\"> \r\n          <Form onChange={this.onChange} onSearch={this.onSearch} />\r\n            <div className = \"App-components\" > \r\n              <Facets facets={this.state.facets} onFacet={this.onFacet} onFilter={this.onFilter}/> \r\n              <Contacts contacts={this.state.contacts} searchKey={searchKey}/>\r\n              <News ref={this.News} newsData={this.state.contacts} />\r\n            </div>\r\n          </div>\r\n          )\r\n        }\r\n       } />\r\n      <Route path=\"/analyse\" exact strict render = {\r\n        () => {\r\n         return (\r\n          <div className = \"App_1\">\r\n            <Chart ref={this.Chart} chartData={this.state.contacts} />\r\n            </div>\r\n          )\r\n        }\r\n      } />\r\n      </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}