{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17165\\\\Documents\\\\Sem1\\\\IR\\\\twilytics_frontend\\\\src\\\\components\\\\Chart.js\";\nimport React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport App from '../App';\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {},\n      processed_chartData: {}\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      var t = this.Processing();\n      console.log(t);\n      this.setState({\n        processed_chartData: t\n      }); //  console.log(this.Processing())\n    };\n\n    this.state = {\n      chartData: {\n        labels: ['Chennai', 'Buffalo'],\n        datasets: [{\n          label: 'Popualtion',\n          data: [617569, 681045],\n          backgroundColor: ['rgba(255,99,132,0.6)', 'rgba(255,99,132,0.6)']\n        }]\n      }\n    };\n  }\n\n  Processing() {\n    //Languages : en,fr,hi,ru\n    var dict = {\n      \"en\": 0,\n      \"fr\": 0,\n      \"hi\": 0,\n      \"ru\": 0,\n      \"pl\": 0\n    };\n\n    for (var i = 0; i < this.props.chartData.length; i++) {\n      var obj = this.props.chartData[i];\n\n      if (obj.lang in dict) {\n        dict[obj.lang] = dict[obj.lang] + 1;\n      }\n    }\n\n    var keys = [];\n    var values = [];\n\n    for (var key in dict) {\n      keys.push(key);\n      values.push(dict[key]);\n    }\n\n    var language_data = {\n      chartData: {\n        labels: keys,\n        datasets: [{\n          label: 'Language',\n          data: values,\n          backgroundColor: ['rgba(255,99,132,0.6)', 'rgba(200,99,132,0.6)', 'rgba(195,99,132,0.6)', 'rgba(160,99,132,0.6)', 'rgba(150,99,132,0.6)']\n        }]\n      }\n    };\n    console.log(language_data);\n    return language_data; //this.setState({processed_chartData : language_data})\n  }\n\n  render() {\n    //console.log(language_data)\n    //this.setState({processed_chartData : language_data})\n    return React.createElement(\"div\", {\n      className: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"buttonClass\",\n      onClick: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Analyse\"), React.createElement(Bar, {\n      data: this.state.processed.chartData,\n      width: 50,\n      height: 50,\n      options: {\n        title: {\n          display: this.props.displayTitle,\n          text: 'Language',\n          fontSize: 25\n        },\n        lengend: {\n          display: this.props.displayLegend,\n          positon: this.props.lengendPosition\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }));\n  }\n\n}\n\nChart.defaultProps = {\n  displayTitle: true,\n  displayLegend: true,\n  lengendPosition: 'right'\n};\nexport default Chart;","map":{"version":3,"sources":["C:/Users/17165/Documents/Sem1/IR/twilytics_frontend/src/components/Chart.js"],"names":["React","Component","Bar","App","Chart","constructor","props","state","chartData","processed_chartData","onSubmit","e","preventDefault","t","Processing","console","log","setState","labels","datasets","label","data","backgroundColor","dict","i","length","obj","lang","keys","values","key","push","language_data","render","processed","title","display","displayTitle","text","fontSize","lengend","displayLegend","positon","lengendPosition","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\nimport App from '../App';\r\n\r\nclass Chart extends React.Component {\r\n    state = {\r\n      chartData: {},\r\n      processed_chartData: {}\r\n    };\r\n\r\n    static defaultProps = {\r\n        displayTitle:true,\r\n        displayLegend:true,\r\n        lengendPosition:'right'\r\n    }\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            chartData:\r\n                {\r\n                  labels : ['Chennai', 'Buffalo'],\r\n                  datasets:[\r\n                      {\r\n                          label : 'Popualtion',\r\n                          data:[\r\n                              617569,\r\n                              681045,\r\n                          ],\r\n                      backgroundColor:[\r\n                          'rgba(255,99,132,0.6)',\r\n                          'rgba(255,99,132,0.6)'\r\n                      ]\r\n                      }\r\n                  ]\r\n              }\r\n            }\r\n        }\r\n\r\n    Processing(){\r\n        //Languages : en,fr,hi,ru\r\n    \r\n        var dict = {\r\n          \"en\": 0,\r\n          \"fr\": 0,\r\n          \"hi\": 0,\r\n          \"ru\": 0,\r\n          \"pl\": 0\r\n        };\r\n    \r\n        for(var i = 0; i < this.props.chartData.length; i++) {\r\n          var obj = this.props.chartData[i];\r\n          if (obj.lang in dict){\r\n          dict[obj.lang] = dict[obj.lang] + 1;\r\n          }\r\n    }\r\n    var keys = []\r\n    var values = []\r\n    for(var key in dict)  { \r\n        keys.push( key );\r\n        values.push(dict[key]);\r\n    }\r\n\r\n    var language_data = {\r\n        chartData : {\r\n        labels : keys,\r\n        datasets:[\r\n            {\r\n                label : 'Language',\r\n                data: values,\r\n            backgroundColor:[\r\n                'rgba(255,99,132,0.6)',\r\n                'rgba(200,99,132,0.6)',\r\n                'rgba(195,99,132,0.6)',\r\n                'rgba(160,99,132,0.6)',\r\n                'rgba(150,99,132,0.6)'\r\n            ]\r\n            }\r\n        ]\r\n    }\r\n\r\n}\r\n    console.log(language_data)\r\n    return language_data\r\n    //this.setState({processed_chartData : language_data})\r\n    }\r\n    \r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        var t = this.Processing();   \r\n        console.log(t) \r\n        this.setState({\r\n              processed_chartData: t\r\n        });\r\n        //  console.log(this.Processing())\r\n      };\r\n\r\n    render(){\r\n        \r\n        //console.log(language_data)\r\n        //this.setState({processed_chartData : language_data})\r\n         return (\r\n            \r\n            <div className=\"chart\">\r\n            <button className=\"buttonClass\" onClick={e => this.onSubmit(e)}>Analyse</button>\r\n            <Bar\r\n                      data={this.state.processed.chartData}\r\n                      width={50}\r\n                      height={50}\r\n                      options={{\r\n                          title:{\r\n                              display:this.props.displayTitle,\r\n                              text:'Language',\r\n                              fontSize:25\r\n                          },\r\n                      lengend:{\r\n                          display:this.props.displayLegend,\r\n                          positon:this.props.lengendPosition\r\n                      }\r\n                      }}\r\n                      />\r\n            </div>\r\n         )\r\n    }\r\n}\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}