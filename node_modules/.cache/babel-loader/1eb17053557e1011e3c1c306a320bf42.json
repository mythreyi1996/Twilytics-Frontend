{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17165\\\\Documents\\\\Sem1\\\\IR\\\\twilytics_frontend\\\\src\\\\components\\\\News.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Bar, Line, Pie, Doughnut } from 'react-chartjs-2';\nimport App from '../App';\nimport \"./Chart.css\";\nimport { GoogleMap, InfoWindow, Marker, withScriptjs, withGoogleMap } from \"react-google-maps\";\n\nclass News extends React.Component {\n  Map() {\n    return React.createElement(GoogleMap, {\n      defaultZoom: 2,\n      defaultCenter: {\n        lat: 32.7502,\n        lng: 114.7655\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {},\n      location_chartData: {},\n      date_charData: {},\n      sentiment_chartData: {},\n      WrappedMap: {},\n      url: [],\n      title: []\n    };\n\n    this.Processing = () => {\n      var title = [];\n      var url = [];\n      var news = [];\n      var urls = [];\n\n      for (var i = 0; i < 5; i++) {\n        var obj = this.props.chartData[i];\n        news = obj.news;\n        urls = obj.news_url;\n\n        if (news != undefined) {\n          for (var j = 0; j < 2; j++) {\n            if (news[j] != null) {\n              title.push(news[j]);\n              url.push(urls[j]);\n            }\n          }\n        }\n      } //alert(title)\n      //alert(urls)\n\n\n      this.setState({\n        title: title\n      });\n      this.setState({\n        url: url\n      });\n      var lang_dict = {};\n      var loc_dict = {};\n      var sentiment_dict = {\n        \"positive\": 0,\n        \"negative\": 0,\n        \"neutral\": 1\n      };\n      var date_dict = {};\n\n      for (var i = 0; i < this.props.chartData.length; i++) {\n        var obj = this.props.chartData[i];\n\n        if (obj.lang in lang_dict) {\n          lang_dict[obj.lang] = lang_dict[obj.lang] + 1;\n        } else {\n          lang_dict[obj.lang] = 1;\n        }\n\n        if (obj[\"state\"] in loc_dict) {\n          loc_dict[obj[\"state\"]] = loc_dict[obj[\"state\"]] + 1;\n        } else {\n          loc_dict[obj[\"state\"]] = 1;\n        }\n\n        if (obj.sentiment in sentiment_dict) {\n          sentiment_dict[obj.sentiment] = sentiment_dict[obj.sentiment] + 1;\n        }\n\n        var date = String(obj.createdAt).split(\" \");\n        var monthDict = {\n          'Jan': 1,\n          'Feb': 2,\n          'Mar': 3,\n          'Apr': 4,\n          'May': 5,\n          'Jun': 6,\n          'Jul': 7,\n          'Aug': 8,\n          'Sep': 9,\n          'Oct': 10,\n          'Nov': 11,\n          'Dec': 12\n        };\n        var temp = date[5] + \"-\" + monthDict[String(date[1])] + \"-\" + date[2]; //var d = new Date(temp);\n\n        if (temp in date_dict) {\n          date_dict[temp] = date_dict[temp] + 1;\n        } else {\n          date_dict[temp] = 1;\n        }\n      }\n\n      var lang_keys = [];\n      var lang_values = [];\n      var loc_keys = [];\n      var loc_values = [];\n      var date_keys = [];\n      var date_values = [];\n      var sentiment_keys = [];\n      var sentiment_values = [];\n\n      for (var key in lang_dict) {\n        lang_keys.push(key);\n        lang_values.push(lang_dict[key]);\n      }\n\n      for (var key in loc_dict) {\n        loc_keys.push(key);\n        loc_values.push(loc_dict[key]);\n      }\n\n      for (var key in date_dict) {\n        date_keys.push(key);\n        date_values.push(date_dict[key]);\n      }\n\n      for (var key in sentiment_dict) {\n        sentiment_keys.push(key);\n        sentiment_values.push(sentiment_dict[key]);\n      }\n\n      this.setState({\n        chartData: {\n          labels: lang_keys,\n          datasets: [{\n            label: \"Language\",\n            data: lang_values,\n            backgroundColor: [\"#3e95cd\", \"#8e5ea2\", \"#3cba9f\", \"#e8c3b9\", \"#c45850\", \"#a8e0ff\"]\n          }]\n        }\n      });\n      this.setState({\n        location_chartData: {\n          labels: loc_keys,\n          datasets: [{\n            label: 'Location',\n            data: loc_values,\n            backgroundColor: ['#a8e0ff', '#8ee3f5', '#70cad1', '#3e517a', '#b08ea2', '#BBB6DF', '#3e95cd', '#8e5ea2', '#3cba9f', '#e8c3b9', '#c45850', '#a8e0ff']\n          }]\n        }\n      });\n      this.setState({\n        date_chartData: {\n          labels: date_keys,\n          datasets: [{\n            label: 'Time series',\n            data: date_values,\n            borderColor: \"#8e5ea2\",\n            fill: false,\n            backgroundColor: ['#a8e0ff']\n          }]\n        }\n      });\n      this.setState({\n        sentiment_chartData: {\n          labels: sentiment_keys,\n          datasets: [{\n            label: 'Sentiment Analysis',\n            data: sentiment_values,\n            borderColor: \"#8e5ea2\",\n            fill: false,\n            backgroundColor: ['#a8e0ff', '#b08ea2', '#BBB6DF']\n          }]\n        }\n      });\n    };\n\n    this.onSubmit = async () => {\n      await this.Processing();\n    };\n\n    this.state = {\n      chartData: {}\n    };\n  }\n\n  componentDidMount() {\n    this.setState({});\n    this.setState({\n      WrappedMap: withScriptjs(withGoogleMap(Map))\n    });\n  }\n\n  render() {\n    const temp = this.state.WrappedMap;\n    return React.createElement(\"div\", {\n      className: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"buttonClass\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"Analyse\"), React.createElement(Doughnut, {\n      data: this.state.chartData,\n      width: 40,\n      height: 10,\n      postion: \"left\",\n      options: {\n        title: {\n          display: this.props.displayTitle,\n          text: 'Language Based Analysis',\n          fontSize: 20\n        },\n        lengend: {\n          display: this.props.displayLegend,\n          positon: this.props.lengendPosition\n        },\n        animationEnabled: true,\n        theme: \"dark2\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }), React.createElement(Pie, {\n      data: this.state.location_chartData,\n      width: 40,\n      height: 10,\n      postion: \"left\",\n      options: {\n        title: {\n          display: this.props.displayTitle,\n          text: 'Location Based Analysis',\n          fontSize: 20\n        },\n        lengend: {\n          display: this.props.displayLegend,\n          positon: this.props.lengendPosition\n        },\n        animationEnabled: true,\n        theme: \"dark1\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      data: this.state.date_chartData,\n      width: 40,\n      height: 20,\n      postion: \"left\",\n      options: {\n        fill: false,\n        title: {\n          display: this.props.displayTitle,\n          text: 'Time series(Number of tweets)',\n          fontSize: 20\n        },\n        lengend: {\n          display: this.props.displayLegend,\n          positon: this.props.lengendPosition\n        },\n        animationEnabled: true,\n        theme: \"light2\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), React.createElement(Pie, {\n      data: this.state.sentiment_chartData,\n      width: 40,\n      height: 10,\n      postion: \"left\",\n      options: {\n        title: {\n          display: this.props.displayTitle,\n          text: 'Sentiment Analysis',\n          fontSize: 20\n        },\n        lengend: {\n          display: this.props.displayLegend,\n          positon: this.props.lengendPosition\n        },\n        animationEnabled: true,\n        theme: \"dark2\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        width: '100vw',\n        height: '100vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(\"temp\", {\n      googleMapURL: \"http://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyDj1ETylimO4HXNUGtGGvJ1V30kdg-vJ38\",\n      loadingElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }),\n      containerElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }),\n      mapElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    })));\n  }\n\n}\n\nNews.defaultProps = {\n  displayTitle: true,\n  displayLegend: true,\n  lengendPosition: 'right'\n};\nReactDOM.render(React.createElement(Chart, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 312\n  },\n  __self: this\n}), document.getElementById(\"root\"));\nexport default New;","map":{"version":3,"sources":["C:/Users/17165/Documents/Sem1/IR/twilytics_frontend/src/components/News.js"],"names":["React","Component","ReactDOM","Bar","Line","Pie","Doughnut","App","GoogleMap","InfoWindow","Marker","withScriptjs","withGoogleMap","News","Map","lat","lng","constructor","props","state","chartData","location_chartData","date_charData","sentiment_chartData","WrappedMap","url","title","Processing","news","urls","i","obj","news_url","undefined","j","push","setState","lang_dict","loc_dict","sentiment_dict","date_dict","length","lang","sentiment","date","String","createdAt","split","monthDict","temp","lang_keys","lang_values","loc_keys","loc_values","date_keys","date_values","sentiment_keys","sentiment_values","key","labels","datasets","label","data","backgroundColor","date_chartData","borderColor","fill","onSubmit","componentDidMount","render","display","displayTitle","text","fontSize","lengend","displayLegend","positon","lengendPosition","animationEnabled","theme","width","height","defaultProps","document","getElementById","New"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Bar, Line, Pie, Doughnut} from 'react-chartjs-2';\r\nimport App from '../App';\r\nimport \"./Chart.css\";\r\nimport {GoogleMap, InfoWindow, Marker, withScriptjs, withGoogleMap} from \"react-google-maps\"\r\n\r\n\r\n\r\nclass News extends React.Component {\r\n    \r\n    state = {\r\n      chartData: {},\r\n      location_chartData: {},\r\n      date_charData: {},\r\n      sentiment_chartData : {},\r\n      WrappedMap: {},\r\n      url: [],\r\n      title: []\r\n    };\r\n\r\n    Map() {\r\n        return( \r\n        <GoogleMap \r\n          defaultZoom = {2}\r\n          defaultCenter={{lat:32.7502, lng:114.7655}} \r\n        >\r\n        </GoogleMap>\r\n        );\r\n      }\r\n\r\n    static defaultProps = {\r\n        displayTitle:true,\r\n        displayLegend:true,\r\n        lengendPosition:'right'\r\n    }\r\n\r\n    constructor(props){\r\n\r\n        \r\n        super(props);\r\n        \r\n        this.state = {\r\n       chartData :{}\r\n                    }\r\n    }\r\n\r\n    componentDidMount() { \r\n        this.setState({})\r\n        this.setState({ WrappedMap : withScriptjs(withGoogleMap(Map))});\r\n    }\r\n\r\n    Processing =  () => {\r\n\r\n        var title = [];\r\n        var url = [];\r\n        var news = [];\r\n        var urls = []\r\n\r\n\r\n        for(var i = 0; i < 5; i++) {\r\n            var obj = this.props.chartData[i];\r\n             news = obj.news;\r\n             urls = obj.news_url;\r\n\r\n            if(news != undefined) {\r\n                for (var j =0 ; j<2; j++) {\r\n                    if(news[j] != null) {\r\n                        title.push(news[j]);\r\n                        url.push(urls[j]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        //alert(title)\r\n        //alert(urls)\r\n\r\n        this.setState({\r\n            title : title})\r\n        \r\n        this.setState({\r\n                url : url})\r\n        \r\n        var lang_dict = {};\r\n\r\n        var loc_dict = {};\r\n\r\n        var sentiment_dict = {\r\n            \"positive\": 0,\r\n            \"negative\": 0,\r\n            \"neutral\": 1,\r\n        };\r\n\r\n        var date_dict = {};\r\n    \r\n        for(var i = 0; i < this.props.chartData.length; i++) {\r\n            var obj = this.props.chartData[i];\r\n\r\n            if (obj.lang in lang_dict){\r\n                lang_dict[obj.lang] = lang_dict[obj.lang] + 1;\r\n            }\r\n            else {\r\n                lang_dict[obj.lang] = 1;\r\n            }\r\n\r\n            if (obj[\"state\"] in loc_dict) {\r\n                loc_dict[obj[\"state\"]] = loc_dict[obj[\"state\"]] + 1;\r\n                }\r\n            else {\r\n                    loc_dict[obj[\"state\"]] = 1;\r\n                }\r\n            \r\n            if (obj.sentiment in sentiment_dict) {\r\n             sentiment_dict[obj.sentiment] = sentiment_dict[obj.sentiment] + 1;\r\n            }\r\n\r\n            var date = String(obj.createdAt).split(\" \");\r\n            var monthDict={'Jan':1, 'Feb':2, 'Mar':3, 'Apr':4, 'May':5, 'Jun':6, 'Jul':7, 'Aug':8, 'Sep':9, 'Oct':10, 'Nov':11, 'Dec':12};\r\n            var temp = date[5] + \"-\" + monthDict[String(date[1])] + \"-\" + date[2];\r\n            //var d = new Date(temp);\r\n\r\n            if (temp in  date_dict) {\r\n            date_dict[temp] = date_dict[temp] + 1;\r\n            }\r\n            else {\r\n            date_dict[temp] = 1;\r\n            }\r\n        }   \r\n\r\n        var lang_keys = []\r\n        var lang_values = []\r\n        var loc_keys = []\r\n        var loc_values = []\r\n        var date_keys = []\r\n        var date_values = []\r\n        var sentiment_keys = []\r\n        var sentiment_values = []\r\n\r\n        for(var key in lang_dict)  { \r\n            lang_keys.push( key );\r\n            lang_values.push(lang_dict[key]);\r\n        }\r\n\r\n        for(var key in loc_dict)  { \r\n            loc_keys.push( key );\r\n            loc_values.push(loc_dict[key]);\r\n        }\r\n\r\n        for(var key in date_dict)  { \r\n            date_keys.push( key );\r\n            date_values.push(date_dict[key]);\r\n        }\r\n\r\n        for(var key in sentiment_dict)  { \r\n            sentiment_keys.push( key );\r\n            sentiment_values.push(sentiment_dict[key]);\r\n        }\r\n\r\n    this.setState({\r\n        chartData : {\r\n        labels : lang_keys,\r\n        datasets:[\r\n            {\r\n                label : \"Language\",\r\n                data: lang_values,\r\n                backgroundColor:  [\"#3e95cd\", \"#8e5ea2\",\"#3cba9f\",\"#e8c3b9\",\"#c45850\", \"#a8e0ff\"],\r\n            }\r\n        ],\r\n    }\r\n    })\r\n\r\n    this.setState({\r\n        location_chartData : {\r\n        labels : loc_keys,\r\n        datasets:[\r\n        {\r\n            label : 'Location',\r\n            data: loc_values,\r\n            backgroundColor: ['#a8e0ff', '#8ee3f5', '#70cad1', '#3e517a', '#b08ea2', '#BBB6DF', '#3e95cd', '#8e5ea2','#3cba9f','#e8c3b9','#c45850', '#a8e0ff']\r\n        }],\r\n        }\r\n    })\r\n\r\n    this.setState({\r\n        date_chartData : {\r\n        labels : date_keys,\r\n        datasets:[\r\n        {\r\n            label : 'Time series',\r\n            data: date_values,\r\n            borderColor: \"#8e5ea2\",\r\n            fill: false,\r\n            backgroundColor: ['#a8e0ff'],\r\n        }]   \r\n        }\r\n        })\r\n\r\n    this.setState({\r\n        sentiment_chartData : {\r\n        labels : sentiment_keys,\r\n        datasets:[\r\n            {\r\n                label : 'Sentiment Analysis',\r\n                data: sentiment_values,\r\n                borderColor: \"#8e5ea2\",\r\n                fill: false,\r\n                backgroundColor: ['#a8e0ff', '#b08ea2', '#BBB6DF'],\r\n            }]   \r\n        }\r\n    })\r\n    }\r\n    \r\n    onSubmit = async () => {\r\n      await this.Processing();\r\n    };\r\n    \r\n    render(){\r\n            const temp = this.state.WrappedMap\r\n            return (\r\n            <div className=\"chart\">\r\n            <button className=\"buttonClass\" onClick={ this.onSubmit}>Analyse</button> \r\n            <Doughnut\r\n                    data={this.state.chartData}\r\n                    width= {40}\r\n                    height= {10}\r\n                    postion=\"left\"\r\n                    options={{\r\n                        title:{\r\n                            display:this.props.displayTitle,\r\n                            text:'Language Based Analysis',\r\n                            fontSize:20\r\n                        },\r\n                        lengend:{\r\n                            display:this.props.displayLegend,\r\n                            positon:this.props.lengendPosition\r\n                        },\r\n                    animationEnabled : true,\r\n                    theme: \"dark2\"\r\n                    }}\r\n            />\r\n            <Pie\r\n                    data={this.state.location_chartData}\r\n                    width={40}\r\n                    height={10}\r\n                    postion=\"left\"\r\n                    options={{\r\n                        title:{\r\n                            display:this.props.displayTitle,\r\n                            text:'Location Based Analysis',\r\n                            fontSize:20\r\n                        },\r\n                        lengend:{\r\n                            display:this.props.displayLegend,\r\n                            positon:this.props.lengendPosition\r\n                        },\r\n                        animationEnabled : true,\r\n                        theme: \"dark1\"\r\n                    }}\r\n            />\r\n            <Bar\r\n                    data={this.state.date_chartData}\r\n                    width= {40}\r\n                    height={20}\r\n                    postion=\"left\"\r\n                    options={{\r\n                        fill:false,\r\n                        title:{\r\n                            display:this.props.displayTitle,\r\n                            text:'Time series(Number of tweets)',\r\n                            fontSize:20\r\n                            },\r\n                        lengend:{\r\n                           display:this.props.displayLegend,\r\n                           positon:this.props.lengendPosition\r\n                        },\r\n                        animationEnabled : true,\r\n                        theme: \"light2\"\r\n                    }}\r\n            />\r\n            <Pie\r\n                    data={this.state.sentiment_chartData}\r\n                    width= {40}\r\n                    height={10}\r\n                    postion=\"left\"\r\n                    options={{\r\n                        title:{\r\n                            display:this.props.displayTitle,\r\n                            text:'Sentiment Analysis',\r\n                            fontSize:20\r\n                        },\r\n                        lengend:{\r\n                            display:this.props.displayLegend,\r\n                            positon:this.props.lengendPosition\r\n                        },\r\n                        animationEnabled : true,\r\n                        theme: \"dark2\"\r\n                    }}\r\n            />\r\n            <div style = {{ width: '100vw', height: '100vh'}}>\r\n            <temp googleMapURL={`http://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyDj1ETylimO4HXNUGtGGvJ1V30kdg-vJ38`}\r\n            loadingElement={<div style={{ height: \"100%\" }} /> }\r\n            containerElement={<div style={{ height: \"100%\" }} /> }\r\n            mapElement={<div style={{ height: \"100%\" }} /> }\r\n           />\r\n          </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render(<Chart />, document.getElementById(\"root\"));\r\nexport default New;"]},"metadata":{},"sourceType":"module"}